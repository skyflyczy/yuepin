<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <context:property-placeholder location="classpath:conf/datasource.properties" ignore-unresolvable="true"/>


    <bean id="parentDataSourceWrite" class="org.apache.commons.dbcp.BasicDataSource" abstract="true">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="initialSize" value="#{configProps['write.tradeserver.mysql.initialSize']}"/>
        <property name="maxIdle" value="#{configProps['write.tradeserver.mysql.maxIdle']}"/>
        <property name="minIdle" value="#{configProps['write.tradeserver.mysql.minIdle']}"/>
        <property name="maxActive" value="#{configProps['write.tradeserver.mysql.maxActive']}"/>
        <property name="maxWait" value="#{configProps['write.tradeserver.mysql.maxWait']}"/>
        <property name="minEvictableIdleTimeMillis" value="#{configProps['write.tradeserver.mysql.minEvictableIdleTimeMillis']}"/>
        <property name="timeBetweenEvictionRunsMillis" value="#{configProps['write.tradeserver.mysql.timeBetweenEvictionRunsMillis']}"/>
        <property name="poolPreparedStatements" value="false" />
        <property name="removeAbandoned" value="#{configProps['write.tradeserver.mysql.removeAbandoned']}" />  <!-- 是否自动回收超时连接 -->
        <property name="removeAbandonedTimeout"  value="#{configProps['write.tradeserver.mysql.removeAbandonedTimeout']}" />  <!-- 超时时间(以秒数为单位) -->
        <property name="testWhileIdle" value="#{configProps['write.tradeserver.mysql.testWhileIdle']}" />    <!-- 打开检查,用异步线程evict进行检查 -->
        <property name="testOnBorrow" value="#{configProps['write.tradeserver.mysql.testOnBorrow']}" />
        <property name="testOnReturn" value="#{configProps['write.tradeserver.mysql.testOnReturn']}" />
        <property name="validationQuery" value="#{configProps['write.tradeserver.mysql.validationQuery']}" />
        <property name="numTestsPerEvictionRun" value="#{configProps['write.tradeserver.mysql.numTestsPerEvictionRun']}" />
    </bean>

    <!-- 写库数据库配置 -->
    <bean id="dataSourceWrite" parent="parentDataSourceWrite">
        <property name="url" value="#{configProps['write.tradeserver.mysql.url']}"/>
        <property name="username" value="#{configProps['write.tradeserver.mysql.username']}" />
        <property name="password" value="#{configProps['write.tradeserver.mysql.password']}" />
    </bean>

    <bean id="sessionFactoryWrite" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config-write.xml" />
        <property name="dataSource" ref="dataSourceWrite" />
    </bean>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceWrite" />
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <bean id="mapperScannerConfigurerTask" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactory"  ref="sessionFactoryWrite"/>
        <property name="basePackage" value="com.yp.trade.dao" />
    </bean>


    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>
